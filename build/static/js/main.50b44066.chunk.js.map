{"version":3,"sources":["context/UserContext.js","components/Landing.js","components/Auth.js","components/Info.js","components/RouletteItem.js","components/UserDash.js","components/Prompts.js","components/CreatePost.js","components/Submission.js","components/ReadRoulette.js","routes.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","props","history","useHistory","storedDarkMode","localStorage","getItem","useState","user","setUser","darkMode","setDarkMode","fontStyle","setFontStyle","Provider","value","test","handleLogin","email","password","axios","post","then","res","data","push","catch","err","alert","console","log","handleRegister","username","handleLogout","get","toggleDarkMode","children","Landing","useContext","className","to","style","margin","fontFamily","center","display","flexDirection","flexWrap","justifyContent","alignItems","alignContent","Auth","setEmail","setPassword","setUsername","showReg","setShowReg","placeholder","onChange","e","target","type","onClick","align","textAlign","list","width","Info","maxWidth","RouletteItem","roulette","editRoulette","deleteRoulette","editMode","setEditMode","prompt_body","editedPrompt","setEditedPrompt","readWarning","setReadWarning","rows","cols","maxLength","prompt_id","roulette_id","mature","UserDash","roulettes","setRoulettes","useEffect","author_id","id","put","name","map","Prompts","prompts","setPrompts","title","pad","spaceing","link","fontSize","color","textDecoration","page","marginTop","CreatePost","promptBody","setPromptBody","setMature","submitBody","setSubmitBody","required","length","href","for","minLength","authorId","Submission","prePage","setPrePage","useParams","preNum","setPreNum","prompt","setPrompt","submit_page","submit_body","Array","isArray","ReadRoulette","pageList","setPageList","isList","whiteSpace","submit_id","exact","path","component","Header","App","setItem","data-theme","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50b44066.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n   const history = useHistory();\r\n   const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\r\n   const [user, setUser] = useState(null);\r\n   const [darkMode, setDarkMode] = useState(storedDarkMode);\r\n   const [fontStyle, setFontStyle] = useState(\"helvetica-font\");\r\n\r\n   const toggleDarkMode = () => setDarkMode(darkMode ? false : true);\r\n\r\n   // useEffect(() => {\r\n   //    axios\r\n   //       .get(\"auth/get_user\")\r\n   //       .then((res) => {\r\n   //          setUser(res.data);\r\n   //          history.push(\"/user_dash\");\r\n   //       })\r\n   //       .catch((err) => {\r\n   //          console.log(err);\r\n   //          history.push(\"/auth\");\r\n   //       });\r\n   // }, []);\r\n\r\n   const handleLogin = (email, password) => {\r\n      axios\r\n         .post(\"/auth/login\", { email, password })\r\n         .then((res) => {\r\n            setUser(res.data);\r\n            history.push(\"/user_dash\");\r\n         })\r\n         .catch((err) => {\r\n            alert(err);\r\n            console.log(err);\r\n         });\r\n   };\r\n\r\n   const handleRegister = (username, email, password) => {\r\n      console.log(username, email, password);\r\n      alert(\r\n         \"Thank you for registering, Please check your email for a verification link\"\r\n      );\r\n      axios\r\n         .post(\"/auth/register\", { username, email, password })\r\n         .then((res) => {\r\n            setUser(res.data);\r\n         })\r\n         .catch((err) => console.log(err));\r\n   };\r\n\r\n   const handleLogout = () => {\r\n      axios.get(\"auth/logout\").then((res) => {\r\n         alert(res.data);\r\n         setUser(null);\r\n         history.push(\"/\");\r\n      });\r\n   };\r\n\r\n   return (\r\n      <UserContext.Provider\r\n         value={{\r\n            test: \"this is a test\",\r\n            user,\r\n            setUser,\r\n            handleLogin,\r\n            handleRegister,\r\n            handleLogout,\r\n            darkMode,\r\n            setDarkMode,\r\n            toggleDarkMode,\r\n            fontStyle,\r\n            setFontStyle,\r\n         }}\r\n      >\r\n         {props.children}\r\n      </UserContext.Provider>\r\n   );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst Landing = () => {\r\n   const { user } = useContext(UserContext);\r\n   return (\r\n      <div>\r\n         <div className=\"center basic\">\r\n            <h1 className=\"center type-three\">Welcome to Writer's Roulette.</h1>\r\n            <h2 className=\"subtitle-three base-text\">\r\n               Collaborative Stories with a Twist!\r\n            </h2>\r\n            <div>\r\n               <Link to=\"/info\" className=\"subtitle-four base-text home-link\">\r\n                  What is Writer's Roulette?\r\n               </Link>\r\n            </div>\r\n         </div>\r\n         <div className=\"center basic\">\r\n            <h1\r\n               style={{\r\n                  margin: \"10px\",\r\n                  fontFamily: '\"Source Code Pro\", monospace',\r\n               }}\r\n            >\r\n               Start a Writer's Roulette!\r\n            </h1>\r\n            <div>\r\n               {user === null ? (\r\n                  <Link to=\"/auth\" className=\"home-link base-text\">\r\n                     Log in or Register to Start Writing!\r\n                  </Link>\r\n               ) : (\r\n                  <Link to=\"/create_new\" className=\"home-link base-text\">\r\n                     Create a New Roulette.\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </div>\r\n         <div className=\"center basic\">\r\n            <div>\r\n               <h1\r\n                  className=\"base-text\"\r\n                  style={{\r\n                     margin: \"10px\",\r\n                     fontFamily: '\"Source Code Pro\", monospace',\r\n                  }}\r\n               >\r\n                  Browse Popular Roulettes.\r\n               </h1>\r\n               <div>\r\n                  <Link to=\"/prompts\" className=\"home-link base-text\">\r\n                     Browse All Roulettes\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Landing;\r\n","import { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst center = {\r\n   display: \"flex\",\r\n   flexDirection: \"row\",\r\n   flexWrap: \"nowrap\",\r\n   justifyContent: \"center\",\r\n   alignItems: \"center\",\r\n   alignContent: \"center\",\r\n};\r\n\r\nconst Auth = (props) => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [username, setUsername] = useState(\"\");\r\n   const { handleLogin, handleRegister } = useContext(UserContext);\r\n   const [showReg, setShowReg] = useState(false);\r\n\r\n   return (\r\n      <div className=\"center\">\r\n         <h1\r\n            className=\"type-four\"\r\n            style={{\r\n               margin: \"10px\",\r\n               fontFamily: '\"Source Code Pro\", monospace',\r\n            }}\r\n         >\r\n            Login & Register.\r\n         </h1>\r\n         {showReg ? (\r\n            <div>\r\n               <div className=\"auth-box\">\r\n                  <div>\r\n                     <h3 className=\"turq-title\">Register</h3>\r\n                  </div>\r\n                  <div className=\"auth-inner\">\r\n                     <input\r\n                        className=\"auth-inputs\"\r\n                        value={email}\r\n                        placeholder=\"email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                     />\r\n                     <input\r\n                        className=\"auth-inputs\"\r\n                        value={username}\r\n                        placeholder=\"username\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                     />\r\n                     <input\r\n                        className=\"auth-inputs\"\r\n                        value={password}\r\n                        placeholder=\"password\"\r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                     />\r\n                     <button\r\n                        className=\"auth-button btn\"\r\n                        onClick={() =>\r\n                           handleRegister(username, email, password)\r\n                        }\r\n                     >\r\n                        Register\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div style={center}>\r\n                  <button\r\n                     className=\"register\"\r\n                     onClick={() => setShowReg(!showReg)}\r\n                  >\r\n                     Back to Login\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         ) : (\r\n            <div>\r\n               <div className=\"auth-box\">\r\n                  <div>\r\n                     <h3 className=\"turq-title\">Login</h3>\r\n                  </div>\r\n\r\n                  <div className=\"auth-inner\">\r\n                     <input\r\n                        className=\"auth-inputs\"\r\n                        value={email}\r\n                        placeholder=\"email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                     />\r\n                     <input\r\n                        className=\"auth-inputs\"\r\n                        value={password}\r\n                        placeholder=\"password\"\r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                     />\r\n                     <button\r\n                        className=\"auth-button btn\"\r\n                        onClick={() => handleLogin(email, password)}\r\n                     >\r\n                        Login\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div style={center}>\r\n                  <button\r\n                     className=\"register\"\r\n                     onClick={() => setShowReg(!showReg)}\r\n                  >\r\n                     Register Now\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Auth;\r\n","import \"./css/Typing.css\";\r\n\r\nconst align = {\r\n   textAlign: \"left\",\r\n   display: \"center\",\r\n   margin: \"10px\",\r\n   textAlign: \"justify\",\r\n   textJustify: \"inter-word\",\r\n};\r\nconst list = {\r\n   display: \"center\",\r\n   width: \"90%\",\r\n};\r\n\r\nconst Info = () => {\r\n   return (\r\n      <div>\r\n         <div className=\"basic center\">\r\n            <h1 className=\"type title\">What is Writer's Roulette?</h1>\r\n            <div className=\"subtitle\" style={{ maxWidth: \"65ch\" }}>\r\n               <p className=\"base-text\" style={align}>\r\n                  Writer's Roulette is an exercise in collaborative storytelling\r\n                  that pulls together writers of all genres, backgrounds, and\r\n                  skill levels. Using rules similar to the game 'Telephone', a\r\n                  Writer's Roulette creates a story one page at a time by one\r\n                  writer at a time.\r\n               </p>\r\n            </div>\r\n            <div className=\"center subtitle-two\">\r\n               <h1 className=\"sub\" style={{ maxWidth: \"70ch\" }}>\r\n                  The Rules are Simple\r\n               </h1>\r\n               <ul\r\n                  className=\"base-text\"\r\n                  style={list}\r\n                  style={{ maxWidth: \"70ch\" }}\r\n               >\r\n                  <li className=\"base-text\" style={align}>\r\n                     The writer (thats you!) is given a page that was written by\r\n                     a different writer based off a writing prompt.\r\n                  </li>\r\n                  <li className=\"base-text\" style={align}>\r\n                     Use the context in that page and the writing prompt to\r\n                     continue the story by writing another page.\r\n                  </li>\r\n                  <li className=\"base-text\" style={align}>\r\n                     However, you are only allowed to know what was written on\r\n                     previous page. Seeing any other pages would spoil all the\r\n                     fun.\r\n                  </li>\r\n               </ul>\r\n               *There may be additional rules put into place, but those are the\r\n               basics*\r\n            </div>\r\n         </div>\r\n         <div className=\"basic center\">\r\n            <h1 className=\"subtitle-five sub\">\r\n               Where did this idea come from?\r\n            </h1>\r\n            <div>\r\n               <p className=\"subtitle-six\" style={{ maxWidth: \"70ch\" }}>\r\n                  <p className=\"base-text\" style={align}>\r\n                     \"head, body, & legs\" is an art game where one person draws\r\n                     a head, another artist draws a body, and another does the\r\n                     legs. After playing this game, my writing group thought it\r\n                     would be fun to do something like this with a story, and we\r\n                     were right. It was an absolute blast!\r\n                  </p>\r\n                  <p className=\"base-text\" style={align}>\r\n                     Thus, Writer's Roulette was born.\r\n                  </p>\r\n                  <p className=\"base-text\" style={align}>\r\n                     Over the years Writer's Roulettes have become our favorite\r\n                     activity when we all get together. This site is a chance to\r\n                     share the fun with the rest of the writing community, and\r\n                     see what other bizarre stories emerge from the depths.\r\n                  </p>\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"basic center\">\r\n            <h1\r\n               className=\"subtitle-seven sub\"\r\n               style={({ fontSize: \"xx-large\" }, { maxWidth: \"70ch\" })}\r\n            >\r\n               Tips and Tricks for Writing your Roulette!\r\n            </h1>\r\n            <p className=\"subtitle-eight\" style={(align, { maxWidth: \"70ch\" })}>\r\n               <p className=\"base-text\" style={align}>\r\n                  To help with continuity, we recommend reading over the prompt\r\n                  and the previous page very carefully. Let it soak in. Try to\r\n                  incorporate as much of the important information from the\r\n                  previous page into the new page.\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  It is totally up to you if you wish to change character\r\n                  perspectives. However, we highly recommend keeping everything\r\n                  in third person as it helps with continuity.\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  When writing the Prompt for a new Writer's Roulette, make sure\r\n                  to include details that are important to the character/story.\r\n                  (i.e. Main Characters, names, ages, locations, personalities,\r\n                  conflict etc.) the prompt is the only thing that all other\r\n                  writers will be able to see.\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  We recommend focusing on interesting characters in interesting\r\n                  setting. Don’t try and map out your whole story in the prompt.\r\n                  The story will be all over the place, thus is the nature of a\r\n                  Writer's Roulette\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  All thought the goal is to try and make the pages as cohesive\r\n                  as possible, it will fall short of that goal spectacularly, so\r\n                  we recommend that you, first and foremost, have fun with it!\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  Please, PLEASE! Be respectful of the clean/mature rating on\r\n                  the page.\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  If you want a bit of extra challenge to make your roulette\r\n                  even more chaotic, try doing it without using the\r\n                  backspace/delete key. It make for some interesting results!\r\n               </p>\r\n               <p className=\"base-text\" style={align}>\r\n                  Once again, have fun with it! We can say, it is a blast!\r\n               </p>\r\n            </p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Info;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RouletteItem = (props) => {\r\n   const { roulette, editRoulette, deleteRoulette } = props;\r\n   const [editMode, setEditMode] = useState(false);\r\n   const [editedPrompt, setEditedPrompt] = useState(roulette.prompt_body);\r\n   const [readWarning, setReadWarning] = useState(true);\r\n\r\n   return (\r\n      <div className=\"basic prompt\">\r\n         <div className=\"center\">\r\n            {editMode ? (\r\n               <div className=\"center\">\r\n                  <div>\r\n                     <textarea\r\n                        className=\"text-area scroll\"\r\n                        type=\"text\"\r\n                        rows=\"4\"\r\n                        cols=\"65\"\r\n                        maxLength=\"500\"\r\n                        value={editedPrompt}\r\n                        onChange={(e) => setEditedPrompt(e.target.value)}\r\n                        key={roulette.prompt_id}\r\n                        placeholder={roulette.prompt_body}\r\n                     >\r\n                        {roulette.prompt_body}\r\n                     </textarea>\r\n                  </div>\r\n                  <div className=\"tag-parent\">\r\n                     <button\r\n                        className=\"btn edit\"\r\n                        onClick={() => {\r\n                           editRoulette(\r\n                              roulette.roulette_id,\r\n                              editedPrompt || roulette.prompt_body\r\n                           );\r\n                           setEditMode(false);\r\n                        }}\r\n                     >\r\n                        update\r\n                     </button>\r\n                     <button\r\n                        className=\"btn edit\"\r\n                        onClick={() => setEditMode(!editMode)}\r\n                     >\r\n                        cancel\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n            ) : (\r\n               <div>\r\n                  <p className=\"ptext\">Prompt:</p>\r\n                  <div className=\"pbody margin\" key={roulette.prompt_id}>\r\n                     {roulette.prompt_body}\r\n                  </div>\r\n                  <div className=\"tag-parent\" key={roulette.prompt_id}>\r\n                     <div>\r\n                        <div>\r\n                           {roulette.mature === true ? (\r\n                              <p className=\"warning\">Mature</p>\r\n                           ) : (\r\n                              <p className=\"clean\">Clean</p>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"btn-div\">\r\n                        <button\r\n                           className=\"btn\"\r\n                           onClick={() => setReadWarning(false)}\r\n                        >\r\n                           read all pages\r\n                        </button>\r\n                        <Link\r\n                           to={`/new_submit/${roulette.roulette_id}`}\r\n                           className=\"btn f\"\r\n                        >\r\n                           write\r\n                        </Link>\r\n                        <button\r\n                           className=\"btn edit\"\r\n                           onClick={() => setEditMode(!editMode)}\r\n                        >\r\n                           edit\r\n                        </button>\r\n                        {readWarning ? (\r\n                           \"\"\r\n                        ) : (\r\n                           <div className=\"fade\">\r\n                              <div className=\"caution center\">\r\n                                 <h1 className=\"warning-text\">Caution!</h1>\r\n                                 <h4 className=\"base-text\">\r\n                                    By reading this Roulette, you are forfeiting\r\n                                    your chance to write pages for it. Are you\r\n                                    sure you would like to continue?\r\n                                 </h4>\r\n                                 <Link\r\n                                    to={`/read_roulette/${roulette.roulette_id}`}\r\n                                    className=\"btn delete\"\r\n                                 >\r\n                                    Continue\r\n                                 </Link>\r\n\r\n                                 <button\r\n                                    className=\"btn\"\r\n                                    onClick={() => setReadWarning(true)}\r\n                                 >\r\n                                    Return\r\n                                 </button>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default RouletteItem;\r\n","import { UserContext } from \"../context/UserContext\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport RouletteItem from \"./RouletteItem\";\r\n\r\nconst UserDash = () => {\r\n   const history = useHistory();\r\n   const { handleLogout } = useContext(UserContext);\r\n   const { user } = useContext(UserContext);\r\n   const [roulettes, setRoulettes] = useState([]);\r\n   const { toggleDarkMode } = useContext(UserContext);\r\n   const { darkMode } = useContext(UserContext);\r\n   const { fontStyle, setFontStyle } = useContext(UserContext);\r\n   console.log(fontStyle);\r\n\r\n   useEffect(() => {\r\n      if (user) {\r\n         axios\r\n            .get(`/api/user_roulette/${user.author_id}`)\r\n            .then((res) => {\r\n               setRoulettes(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n      }\r\n   }, [user]);\r\n\r\n   const editRoulette = (id, editedPrompt) => {\r\n      axios\r\n         .put(`/api/edit_prompt/${id}`, { prompt_body: editedPrompt })\r\n         .then((res) => setRoulettes(res.data))\r\n         .catch((err) => console.log(err));\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <h1 className=\"title\" style={{ margin: \"10px\" }}>\r\n            User Dashbord.\r\n         </h1>\r\n         <div className=\"basic\">\r\n            <div>\r\n               <div>\r\n                  {user === null ? (\r\n                     <div>Please Sign in to View your User Dashboard</div>\r\n                  ) : (\r\n                     <div>\r\n                        <div>\r\n                           <h1 className=\"title\">\r\n                              Welcome {user.username}, to Writer's Roulette!\r\n                           </h1>\r\n                           <Link to=\"/create_new\" className=\"btn2\">\r\n                              Create a Roulette\r\n                           </Link>\r\n                           <button\r\n                              onClick={() => handleLogout()}\r\n                              className=\"btn2\"\r\n                           >\r\n                              Logout\r\n                           </button>\r\n                           <div className=\"line\" />\r\n                           <div>\r\n                              <h2 className=\"mono-text\">Settings</h2>\r\n                              <button className=\"btn2\" onClick={toggleDarkMode}>\r\n                                 {darkMode\r\n                                    ? \"Switch to Light Mode\"\r\n                                    : \"Switch to Dark Mode\"}\r\n                              </button>\r\n                              <div className=\"inline\">\r\n                                 <p className=\"base-text\">Font Style:</p>\r\n                                 <select\r\n                                    name=\"font\"\r\n                                    id=\"font\"\r\n                                    className=\"font-box inputs\"\r\n                                    onChange={(e) =>\r\n                                       setFontStyle(e.target.value)\r\n                                    }\r\n                                 >\r\n                                    <option className=\"base-text\">\r\n                                       selected: {fontStyle}\r\n                                    </option>\r\n                                    <option\r\n                                       className=\"base-text\"\r\n                                       value=\"helvetica\"\r\n                                    >\r\n                                       Helvetica (default)\r\n                                    </option>\r\n                                    <option\r\n                                       className=\"base-text\"\r\n                                       value=\"comic-sans\"\r\n                                    >\r\n                                       Comic Sans\r\n                                    </option>\r\n                                    <option\r\n                                       className=\"base-text\"\r\n                                       value=\"dyslexic\"\r\n                                    >\r\n                                       Open Dyslexic\r\n                                    </option>\r\n                                    <option\r\n                                       className=\"base-text\"\r\n                                       value=\"monospace\"\r\n                                    >\r\n                                       Monospace\r\n                                    </option>\r\n                                    <option\r\n                                       className=\"base-text\"\r\n                                       value=\"times-new\"\r\n                                    >\r\n                                       Times New Roman\r\n                                    </option>\r\n                                 </select>\r\n                                 <p className=\"margin example\">\r\n                                    ( Example text )\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               <div></div>\r\n            </div>\r\n         </div>\r\n         <div>\r\n            <div className=\"user-title\">\r\n               <h1 className=\"title\">Your Roulettes.</h1>\r\n            </div>\r\n            <div className=\"center\">\r\n               {roulettes.map((roulette) => {\r\n                  return (\r\n                     <RouletteItem\r\n                        roulette={roulette}\r\n                        editRoulette={editRoulette}\r\n                        // deleteRoulette={deleteRoulette}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default UserDash;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Prompts = () => {\r\n   const [prompts, setPrompts] = useState([]);\r\n   const [readWarning, setReadWarning] = useState(true);\r\n\r\n   useEffect(() => {\r\n      axios\r\n         .get(\"/api/all_prompts\")\r\n         .then((res) => {\r\n            console.log(res.data);\r\n            setPrompts(res.data);\r\n         })\r\n         .catch((err) => console.log(err));\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         <div className=\"center\">\r\n            <h1\r\n               className=\"type-four\"\r\n               style={{\r\n                  margin: \"10px\",\r\n                  fontFamily: '\"Source Code Pro\", monospace',\r\n               }}\r\n            >\r\n               Browse Roulettes.\r\n            </h1>\r\n         </div>\r\n         <div>\r\n            <div>\r\n               {prompts.map((roulette) => {\r\n                  return (\r\n                     <div className=\"basic\" style={{ maxWidth: \"100ch\" }}>\r\n                        <div className=\"center\">\r\n                           <div>\r\n                              <div className=\"prompt\">\r\n                                 <p className=\"ptext\">Prompt:</p>\r\n                                 <div\r\n                                    className=\"pbody margin\"\r\n                                    key={roulette.prompt_id}\r\n                                 >\r\n                                    {roulette.prompt_body}\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"spacing\">\r\n                              <div\r\n                                 className=\"tag-parent\"\r\n                                 key={roulette.prompt_id}\r\n                              >\r\n                                 <div>\r\n                                    <div>\r\n                                       {roulette.mature === true ? (\r\n                                          <p className=\"warning\">Mature</p>\r\n                                       ) : (\r\n                                          <p className=\"clean\">Clean</p>\r\n                                       )}\r\n                                    </div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <button\r\n                                       className=\"btn\"\r\n                                       onClick={() => setReadWarning(false)}\r\n                                    >\r\n                                       read all pages\r\n                                    </button>\r\n                                    <Link\r\n                                       to={`/new_submit/${roulette.roulette_id}`}\r\n                                       className=\"btn\"\r\n                                    >\r\n                                       write a page\r\n                                    </Link>\r\n                                    {readWarning ? (\r\n                                       \"\"\r\n                                    ) : (\r\n                                       <div className=\"fade\">\r\n                                          <div className=\"caution\">\r\n                                             <h1 className=\"warning-text\">\r\n                                                Caution!\r\n                                             </h1>\r\n                                             <h4 className=\"base-text\">\r\n                                                By reading this Roulette, you\r\n                                                are forfeiting your chance to\r\n                                                write pages for it. Are you sure\r\n                                                you would like to continue?\r\n                                             </h4>\r\n                                             <Link\r\n                                                to={`/read_roulette/${roulette.roulette_id}`}\r\n                                                className=\"btn delete\"\r\n                                             >\r\n                                                Continue\r\n                                             </Link>\r\n\r\n                                             <button\r\n                                                className=\"btn\"\r\n                                                onClick={() =>\r\n                                                   setReadWarning(true)\r\n                                                }\r\n                                             >\r\n                                                Return\r\n                                             </button>\r\n                                          </div>\r\n                                       </div>\r\n                                    )}\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  );\r\n               })}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\n// const Warning = (props) => {\r\n//    return (\r\n//       <div>\r\n//          <h1>Caution</h1>\r\n//          <h3>\r\n//             By reading this Roulette, you will forfeit your ability to write a\r\n//             page for it? Are you sure you would like to continue?\r\n//          </h3>\r\n//          <button>\r\n//             <Link\r\n//                to={`/read_roulette/${roulette.roulette_id}`}\r\n//                className=\"btn\"\r\n//             ></Link>\r\n//             Continue\r\n//          </button>\r\n//          <button>Return</button>\r\n//       </div>\r\n//    );\r\n// };\r\n\r\nexport default Prompts;\r\n","import axios from \"axios\";\r\nimport { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst title = {\r\n   display: \"flex\",\r\n   flexDirection: \"row\",\r\n   justifyContent: \"center\",\r\n   alignItems: \"center\",\r\n   alignContent: \"center\",\r\n   margin: \"5px\",\r\n   width: \"95%\",\r\n};\r\n\r\nconst pad = {\r\n   margin: \"15px\",\r\n};\r\n\r\nconst spaceing = {\r\n   margin: \"10px\",\r\n};\r\nconst link = {\r\n   fontSize: \"small\",\r\n   margin: \"10px\",\r\n   color: \"rgb(68, 118, 149)\",\r\n   textDecoration: \"none\",\r\n};\r\n\r\nconst page = {\r\n   margin: \"10\",\r\n   marginTop: \"25px\",\r\n};\r\n\r\nconst CreatePost = () => {\r\n   const { user } = useContext(UserContext);\r\n   const [promptBody, setPromptBody] = useState(\"\");\r\n   const [mature, setMature] = useState(\"\");\r\n   const [submitBody, setSubmitBody] = useState(\"\");\r\n   const history = useHistory();\r\n\r\n   const handleCreate = () => {\r\n      axios\r\n         .post(\"/api/create_roulette\", {\r\n            promptBody,\r\n            authorId: user.author_id,\r\n            mature,\r\n            submitBody,\r\n         })\r\n         .then((res) => {\r\n            history.push(\"/user_dash\");\r\n         })\r\n         .catch((err) => console.log(err));\r\n   };\r\n\r\n   return (\r\n      <div style={pad} className=\"basic center\">\r\n         <h1 className=\"type-two center\"> Create Roulette.</h1>\r\n         <div>\r\n            <div style={title}>\r\n               <h3 className=\"base-text\" style={spaceing}>\r\n                  Writing Prompt:\r\n               </h3>\r\n               <div>\r\n                  <textarea\r\n                     type=\"text\"\r\n                     className=\"text-area scroll base-text\"\r\n                     rows=\"3\"\r\n                     cols=\"75\"\r\n                     required\r\n                     placeholder=\"(max 500 characters)\"\r\n                     maxLength=\"500\"\r\n                     value={promptBody}\r\n                     onChange={(e) => setPromptBody(e.target.value)}\r\n                  />\r\n                  <p className=\"base-text\">\r\n                     Character limit: {promptBody.length}/500\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <a\r\n               className=\"base-text\"\r\n               style={link}\r\n               href=\"https://www.reddit.com/r/WritingPrompts/\"\r\n               target=\"_blank\"\r\n            >\r\n               Need some inspiration for your prompt? Click me!\r\n            </a>\r\n         </div>\r\n         <div className=\"line\"></div>\r\n         <div style={{ margin: \"10px\" }}>\r\n            <h2 className=\"mono-text\">Roulette Settings</h2>\r\n            <div>\r\n               <div className=\"inline\">\r\n                  <label className=\"base-text inline\" for=\"mature\">\r\n                     <p className=\"warning\">*</p>\r\n                     Mature Rating?:\r\n                  </label>\r\n                  <select\r\n                     className=\"inputs base-text\"\r\n                     name=\"mature\"\r\n                     required\r\n                     value={mature}\r\n                     onChange={(e) => setMature(e.target.value)}\r\n                  >\r\n                     <option className=\"base-text\" value=\"\">\r\n                        Please select\r\n                     </option>\r\n                     <option className=\"base-text\" value=\"False\">\r\n                        Clean (PG-PG13)\r\n                     </option>\r\n                     <option className=\"base-text\" value=\"TRUE\">\r\n                        Mature (R)\r\n                     </option>\r\n                  </select>\r\n               </div>\r\n               <div className=\"inline\">\r\n                  <div>\r\n                     <label className=\"base-text\" for=\"more-rules\">\r\n                        More Rules:\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"left-align\">\r\n                     <div className=\"inline\">\r\n                        <input\r\n                           type=\"checkbox\"\r\n                           id=\"not-a-rule\"\r\n                           name=\"base-text\"\r\n                           value=\"not-a-rule\"\r\n                           className=\"checkbox\"\r\n                        ></input>\r\n                        <label for=\"not-a-rule\" className=\"base-text\">\r\n                           More rules to come\r\n                        </label>\r\n                     </div>\r\n                     <div className=\"inline\">\r\n                        <input\r\n                           type=\"checkbox\"\r\n                           id=\"not-a-rule\"\r\n                           name=\"base-text\"\r\n                           value=\"not-a-rule\"\r\n                           className=\"checkbox\"\r\n                        ></input>\r\n                        <label for=\"not-a-rule\" className=\"base-text\">\r\n                           This does nothing\r\n                        </label>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"line\" />\r\n         <div>\r\n            <h3 className=\"base-text\" style={page}>\r\n               First Page\r\n            </h3>\r\n            <textarea\r\n               style={spaceing}\r\n               className=\"text-area scroll\"\r\n               type=\"text\"\r\n               rows=\"30\"\r\n               cols=\"100\"\r\n               placeholder=\"(write a minimum of 1500 characters, and a max of 3000 [approx 350-500 word])\"\r\n               minLength=\"1500\"\r\n               maxLength=\"3000\"\r\n               value={submitBody}\r\n               onChange={(e) => setSubmitBody(e.target.value)}\r\n            />\r\n            <p className=\"base-text\">\r\n               Character limit:\r\n               <div>\r\n                  {submitBody.length < 1500 ? (\r\n                     <div className=\"base-text\" style={{ color: \"orange\" }}>\r\n                        write at least 1500 characters / {submitBody.length}\r\n                     </div>\r\n                  ) : submitBody.length > 2900 ? (\r\n                     <div className=\"base-text\" style={{ color: \"orange\" }}>\r\n                        {submitBody.length}/3000\r\n                        <p className=\"warning\">\r\n                           Caution: Aproaching Character Limit\r\n                        </p>\r\n                     </div>\r\n                  ) : (\r\n                     <div className=\"base-text\" style={{ color: \"green\" }}>\r\n                        {submitBody.length}/3000\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </p>\r\n         </div>\r\n         <div>\r\n            <button className=\"button\" style={spaceing} onClick={handleCreate}>\r\n               Post\r\n            </button>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CreatePost;\r\n","import axios from \"axios\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst Submission = () => {\r\n   const { user } = useContext(UserContext);\r\n   const history = useHistory();\r\n   const [submitBody, setSubmitBody] = useState(\"\");\r\n   const [prePage, setPrePage] = useState(\"\");\r\n   const { roulette_id } = useParams();\r\n   const [preNum, setPreNum] = useState([]);\r\n   const [prompt, setPrompt] = useState([]);\r\n   const submit_page = preNum + 1;\r\n   const submit_body = submitBody;\r\n   const author_id = user.author_id;\r\n   console.log(author_id);\r\n\r\n   useEffect(() => {\r\n      axios\r\n         .get(`/api/new_submit/${roulette_id}`)\r\n         .then((res) => {\r\n            if (Array.isArray(res.data)) {\r\n               setPrePage(res.data[0].submit_body);\r\n               setPreNum(res.data[0].submit_page);\r\n               setPrompt(res.data[0].prompt_body);\r\n            }\r\n         })\r\n         .catch((err) => console.log(err));\r\n   }, [roulette_id]);\r\n\r\n   const handleSubmit = () => {\r\n      axios\r\n         .post(\"/api/submit_page\", {\r\n            roulette_id,\r\n            submit_body,\r\n            submit_page,\r\n            author_id,\r\n         })\r\n         .then((res) => {\r\n            history.push(\"/user_dash\");\r\n         })\r\n         .catch((err) => console.log(err));\r\n   };\r\n\r\n   return (\r\n      <div className=\"center\">\r\n         <h1 className=\"title type-six\">New Page Submission.</h1>\r\n         <div className=\"basic\">\r\n            <div>\r\n               <div className=\"center\">\r\n                  <div>\r\n                     <div className=\"ptext\">Prompt:</div>\r\n                     <p className=\"pbody\">{prompt}</p>\r\n                  </div>\r\n                  <div className=\"line\" />\r\n                  <h3 className=\"title\">Previous Page</h3>\r\n                  <p className=\"page-num sm-text\">page {preNum}</p>\r\n                  <div className=\"page-body scroll\">{prePage}</div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <div>\r\n                  <h3 className=\"title\">Your Page</h3>\r\n                  <p className=\"page-num sm-text\">page {submit_page}</p>\r\n                  <textarea\r\n                     className=\"text-area scroll\"\r\n                     type=\"text\"\r\n                     rows=\"30\"\r\n                     cols=\"100\"\r\n                     placeholder=\"(write a minimum of 1500 characters, and a max of 3000 [approx 350-500 word])\"\r\n                     minLength=\"1500\"\r\n                     maxLength=\"3000\"\r\n                     value={submitBody}\r\n                     required\r\n                     onChange={(e) => setSubmitBody(e.target.value)}\r\n                  />\r\n                  <div>\r\n                     <p>\r\n                        Character limit:\r\n                        <div>\r\n                           {submitBody.length < 1500 ? (\r\n                              <div style={{ color: \"orange\" }}>\r\n                                 write at least 1500 characters /{\" \"}\r\n                                 {submitBody.length}\r\n                              </div>\r\n                           ) : submitBody.length > 2900 ? (\r\n                              <div style={{ color: \"orange\" }}>\r\n                                 {submitBody.length}/3000\r\n                                 <p className=\"warning\">\r\n                                    Caution: Aproaching Character Limit\r\n                                 </p>\r\n                              </div>\r\n                           ) : (\r\n                              <div style={{ color: \"green\" }}>\r\n                                 {submitBody.length}/3000\r\n                              </div>\r\n                           )}\r\n                        </div>\r\n                     </p>\r\n                     <button className=\"button margin\" onClick={handleSubmit}>\r\n                        Submit Page\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Submission;\r\n","import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ReadRoulette = () => {\r\n   const { roulette_id } = useParams();\r\n   const [pageList, setPageList] = useState([]);\r\n\r\n   const isList = pageList.length > 0;\r\n   console.log(roulette_id);\r\n\r\n   useEffect(() => {\r\n      axios\r\n         .get(`/api/read_roulette/${roulette_id}`)\r\n         .then((res) => {\r\n            console.log(res.data);\r\n            setPageList(res.data);\r\n         })\r\n         .catch((err) => console.log(err));\r\n   }, [roulette_id]);\r\n\r\n   return (\r\n      <div>\r\n         <div className=\"center\">\r\n            <h1 className=\"title margin type-five\">Read Roulette.</h1>\r\n            <div className=\"basic center\">\r\n               <div className=\"margin prompt\">\r\n                  <div className=\"ptext\">Prompt:</div>\r\n                  <p className=\"pbody\">\r\n                     {isList ? pageList[0].prompt_body : \"\"}\r\n                  </p>\r\n                  <div className=\"line\" />\r\n               </div>\r\n               {pageList.map((page) => {\r\n                  return (\r\n                     <div key={page.submit_id}>\r\n                        <div className=\"page-num\">\r\n                           <div className=\"sm-text\">\r\n                              page {page.submit_page}\r\n                           </div>\r\n                        </div>\r\n                        <div\r\n                           style={{ whiteSpace: \"pre-line\" }}\r\n                           className={`margin page`}\r\n                        >\r\n                           {page.submit_body}\r\n                           <div className=\"line\" />\r\n                        </div>\r\n                     </div>\r\n                  );\r\n               })}\r\n               <p className=\"margin sm-text\">\r\n                  End of Roulette, Check back later for more\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ReadRoulette;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Landing from \"./components/Landing\";\r\nimport Auth from \"./components/Auth\";\r\nimport Info from \"./components/Info\";\r\nimport UserDash from \"./components/UserDash\";\r\nimport Prompts from \"./components/Prompts\";\r\nimport CreatePost from \"./components/CreatePost\";\r\nimport Submission from \"./components/Submission\";\r\nimport ReadRoulette from \"./components/ReadRoulette\";\r\n\r\nexport default (\r\n   <Switch>\r\n      <Route exact path=\"/\" component={Landing} />\r\n      <Route path=\"/auth\" component={Auth} />\r\n      <Route path=\"/info\" component={Info} />\r\n      <Route path=\"/user_dash\" component={UserDash} />\r\n      <Route path=\"/prompts\" component={Prompts} />\r\n      <Route path=\"/create_new\" component={CreatePost} />\r\n      <Route path=\"/new_submit/:roulette_id\" component={Submission} />\r\n      <Route path=\"/read_roulette/:roulette_id\" component={ReadRoulette} />\r\n   </Switch>\r\n);\r\n","import { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n   const { user } = useContext(UserContext);\r\n\r\n   return (\r\n      <nav className=\"navbar\">\r\n         <h1 className=\"nav-title\">Writer's Roulette.</h1>\r\n         <div className=\"nav-links\">\r\n            <Link to=\"/\" className=\"link\">\r\n               {\" \"}\r\n               Home{\" \"}\r\n            </Link>\r\n            <Link to=\"/info\" className=\"link\">\r\n               {\" \"}\r\n               About{\" \"}\r\n            </Link>\r\n            <Link to=\"/prompts\" className=\"link\">\r\n               {\" \"}\r\n               Browse{\" \"}\r\n            </Link>\r\n         </div>\r\n         <div>\r\n            <div className=\"user-links\">\r\n               {user === null ? (\r\n                  <Link className=\"login-link\" to=\"/auth\">\r\n                     Login/Register\r\n                  </Link>\r\n               ) : (\r\n                  <div>\r\n                     <Link className=\"login-link\" to=\"/user_dash\">\r\n                        {user.username}'s Dashboard\r\n                     </Link>\r\n                     <Link to=\"/create_new\" className=\"new-button\">\r\n                        +\r\n                     </Link>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </div>\r\n         <div className=\"dropdown\">\r\n            <button className=\"menu-button\">\r\n               <p className=\"menu\">MENU</p>\r\n               <div className=\"burger\">\r\n                  <div className=\"patty\"></div>\r\n                  <div className=\"patty\"></div>\r\n                  <div className=\"patty\"></div>\r\n               </div>\r\n            </button>\r\n            <div className=\"drop\">\r\n               <Link to=\"/\" className=\"btn-link\">\r\n                  Home\r\n               </Link>\r\n               <Link to=\"/info\" className=\"btn-link\">\r\n                  About\r\n               </Link>\r\n               <Link to=\"/prompts\" className=\"btn-link\">\r\n                  Browse\r\n               </Link>\r\n               {user === null ? (\r\n                  <Link className=\"btn-link\" to=\"/auth\">\r\n                     Login/Register\r\n                  </Link>\r\n               ) : (\r\n                  <Link className=\"btn-link\" to=\"/user_dash\">\r\n                     {user.username}'s Dashbord\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.css\";\r\n// import { useContext, useState } from \"react\";\r\n// import { UserContext } from \"./context/UserContext\";\r\n// import Auth from \"./components/Auth\";\r\nimport routes from \"./routes\";\r\nimport Header from \"./components/Header\";\r\nimport { UserContext } from \"./context/UserContext\";\r\nimport { useContext, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n   const { darkMode, fontStyle } = useContext(UserContext);\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem(\"DARK_MODE\", darkMode);\r\n   }, [darkMode]);\r\n\r\n   return (\r\n      <div\r\n         className={`App ${fontStyle}`}\r\n         data-theme={darkMode ? `dark` : `light`}\r\n      >\r\n         <header className=\"App-header\">\r\n            <Header />\r\n            {routes}\r\n         </header>\r\n         {/* <footer>Writer's Roulette</footer> */}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { UserProvider } from \"./context/UserContext\";\nimport { HashRouter } from \"react-router-dom\";\n// import { Router } from \"express\";\n// const Router = HashRouter;\n\nReactDOM.render(\n   <React.StrictMode>\n      <HashRouter>\n         <UserProvider>\n            <App />\n         </UserProvider>\n      </HashRouter>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}